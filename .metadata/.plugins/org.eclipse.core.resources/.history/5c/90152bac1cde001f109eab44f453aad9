$(function() {

	// Register form Validations
	var $userRegister = $("#userRegister");

	$userRegister.validate({

		rules: {
			name: {
				required: true,
				lettersonly: true
			}
			,
			email: {
				required: true,
				space: true,
				email: true
			},
			mobileNumber: {
				required: true,
				space: true,
				numericOnly: true,
				minlength:10,
				maxlength: 10

			},
			password: {
				required: true,
				space: true

			},
			confirmpassword: {
				required: true,
				space: true,
				equalTo: '#pass'

			},
			address: {
				required: true,

			},

			city: {
				required: true,
				space: true

			},
			state: {
				required: true,


			},
			pincode: {
				required: true,
				space: true,
				numericOnly: true

			},
			img: {
				required: true,
			},
			check: {
				required: true,
			}

		},
		messages: {
			name: {
				required: 'name required',
				lettersonly: 'name cannot contain letters'
			},
			email: {
				required: 'email name must be required',
				space: 'space not allowed',
				email: 'Invalid email'
			},
			mobileNumber: {
				required: 'Mobile Number must be required',
				space: 'space not allowed',
				numericOnly: 'Invalid Number',
				minlength: 'Invalid Number',
				maxlength: 'Invalid Number'
			},

			password: {
				required: 'password must be required',
				space: 'space not allowed'

			},
			confirmpassword: {
				required: 'confirm password must be required',
				space: 'space not allowed',
				equalTo: 'password mismatch'

			},
			address: {
				required: 'address must be required',

			},

			city: {
				required: 'city must be required',
				space: 'space not allowed'

			},
			state: {
				required: 'state must be required',

			},
			pincode: {
				required: 'pincode must be required',
				space: 'space not allowed',
				numericOnly: 'invalid pincode'

			},
			img: {
				required: 'image required',
			},
			check: {
				required: 'Accept to terms and conditions',
			}
		}
	})

	// reset password

	var $resetPassword = $("#resetPassword");

	$resetPassword.validate({
		rules: {
			password: {
				required: true,
				minlength: 8,
				regex: /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{5,}$/,
				space: true
			},
			confirmPassword: {
				required: true,
				space: true,
				equalTo: '#pass'
			}
		},
		messages: {
			password: {
				required: 'Password is required',
				minlength: 'Password must be at least 8 characters long',
				regex: 'Password must contain at least one uppercase letter, one number, and one special character',
				space: 'Spaces are not allowed'
			},
			confirmPassword: {
				required: 'Confirm password is required',
				space: 'Spaces are not allowed',
				equalTo: 'Passwords do not match'
			}
		}
	});


	// Order Validations


	var $orders = $("#orders");

	$orders.validate({
		rules: {
			firstName: {
				required: true,
				lettersonly: true
			},
			lastName: {
				required: true,
				lettersonly: true
			}
			,
			email: {
				required: true,
				space: true,
				email: true
			},
			mobileNo: {
				required: true,
				space: true,
				numericOnly: true,
				maxlength: 10,
				minlength:10

			},
			address: {
				required: true,

			},

			city: {
				required: true,
				space: true

			},
			state: {
				required: true,


			},
			pincode: {
				required: true,
				space: true,
				numericOnly: true

			},
			paymentType: {
				required: true
			}
		},
		messages: {
			firstName: {
				required: 'first required',
				lettersonly: 'Invalid name'
			},
			lastName: {
				required: 'last name required',
				lettersonly: 'Invalid name'
			},
			email: {
				required: 'email name must be required',
				space: 'space not allowed',
				email: 'Invalid email'
			},
			mobileNo: {
				required: 'Mobile Number must be required',
				space: 'space not allowed',
				numericOnly: 'Invalid Number',
				minlength: 'Invalid Number',
				maxlength: 'Invalid Number'
			}
			,
			address: {
				required: 'address must be required'

			},

			city: {
				required: 'city must be required',
				space: 'space not allowed'

			},
			state: {
				required: 'state must be required',
				space: 'space not allowed'

			},
			pincode: {
				required: 'pincode must be required',
				space: 'space not allowed',
				numericOnly: 'invalid pincode'

			},
			paymentType: {
				required: 'select payment type'
			}
		}
	})


})



jQuery.validator.addMethod('lettersonly', function(value, element) {
	return /^[^-\s][a-zA-Z_\s-]+$/.test(value);
});

jQuery.validator.addMethod('space', function(value, element) {
	return /^[^-\s]+$/.test(value);
});

jQuery.validator.addMethod('all', function(value, element) {
	return /^[^-\s][a-zA-Z0-9_,.\s-]+$/.test(value);
});


jQuery.validator.addMethod('numericOnly', function(value, element) {
	return /^[0-9]+$/.test(value);
});

